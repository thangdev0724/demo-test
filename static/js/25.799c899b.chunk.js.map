{"version":3,"file":"static/js/25.799c899b.chunk.js","mappings":"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","sources":["apis/modules/Common.ts","apis/modules/Jobs.ts","apis/axiosInstance.ts","apis/services.ts","components/Form/JobForm/index.tsx","constants/services.ts","libs/notification.ts","pages/Jobs/create/index.tsx"],"sourcesContent":["import { getRequest } from 'apis/services';\r\n\r\nfunction getDepartments() {\r\n  return getRequest({\r\n    url: `/public/departments`\r\n  });\r\n}\r\n\r\nfunction getLocations() {\r\n  return getRequest({\r\n    url: `/public/locations`\r\n  });\r\n}\r\n\r\nfunction getExperiences() {\r\n  return getRequest({\r\n    url: `/public/experiences`\r\n  });\r\n}\r\n\r\nfunction getCandidateStatus() {\r\n  return getRequest({\r\n    url: `/public/candidate-statuses`\r\n  });\r\n}\r\n\r\nfunction getWorkingTime() {\r\n  return getRequest({\r\n    url: `/public/working-times`\r\n  });\r\n}\r\n\r\nexport { getDepartments, getLocations, getExperiences, getCandidateStatus, getWorkingTime };\r\n","import { deleteRequest, getRequest, patchRequest, postRequest, putRequest } from 'apis/services';\r\nimport { IJobForm } from 'models/jobs';\r\n\r\nfunction createJob(newItem: IJobForm) {\r\n  return postRequest({\r\n    url: '/admin/jobs',\r\n    payload: newItem\r\n  });\r\n}\r\n\r\nfunction getListJob(params: any) {\r\n  return getRequest({\r\n    url: '/admin/jobs',\r\n    params\r\n  });\r\n}\r\n\r\nfunction updateJob(id?: number | string, updatedItem?: IJobForm | any) {\r\n  return putRequest({\r\n    url: `/admin/jobs/${id}`,\r\n    payload: updatedItem\r\n  });\r\n}\r\n\r\nfunction deleteJob(id: number | string) {\r\n  return deleteRequest({\r\n    url: `/admin/jobs/${id}`\r\n  });\r\n}\r\n\r\nfunction getJobById(id: number | string) {\r\n  return getRequest({\r\n    url: `/admin/jobs/${id}`\r\n  });\r\n}\r\n\r\nfunction updateStatusJob(id: number | string, status: string) {\r\n  return patchRequest({\r\n    url: `/admin/jobs/${id}`,\r\n    payload: {\r\n      status\r\n    }\r\n  });\r\n}\r\n\r\nexport { createJob, deleteJob, getJobById, getListJob, updateJob, updateStatusJob };\r\n","import axios, { AxiosError, AxiosResponse, InternalAxiosRequestConfig } from 'axios';\r\nimport set from 'lodash/set';\r\nimport get from 'lodash/get';\r\nimport { getCookie } from 'utils/cookies';\r\nimport { BASE_API_URL, CookieKeys } from 'constants/services';\r\n\r\nconst axiosInstance = axios.create({\r\n  headers: {\r\n    Accept: 'application/json',\r\n    'Content-Type': 'application/json'\r\n  },\r\n  baseURL: BASE_API_URL,\r\n  timeout: 20000,\r\n  validateStatus: function (status) {\r\n    return status >= 200 && status < 300;\r\n  }\r\n});\r\n\r\naxiosInstance.interceptors.request.use(\r\n  (request: InternalAxiosRequestConfig<any>) => {\r\n    const token = getCookie(CookieKeys.Token);\r\n    if (!token) {\r\n      return request;\r\n    }\r\n    set(request, 'headers.Authorization', `Bearer ${token}`);\r\n    return request;\r\n  },\r\n  (_error: any) => {\r\n    console.log('🚀 ~ axiosInstance.interceptors.request.use ~ _error:', _error);\r\n    const errorResponse = {\r\n      status: null,\r\n      message: null,\r\n      errors: null\r\n    };\r\n    return Promise.reject(errorResponse);\r\n  }\r\n);\r\n\r\naxiosInstance.interceptors.response.use(\r\n  (response: AxiosResponse) => {\r\n    if (response && response.data) {\r\n      return response.data;\r\n    }\r\n    return response;\r\n  },\r\n  (error: AxiosError) => {\r\n    if (error.response?.status === 401) {\r\n      // window.location.href = '/login';\r\n      return Promise.reject(error);\r\n    }\r\n    const errorResponse = {\r\n      status: get(error, 'response.status', null),\r\n      message: get(error, 'response.data.message', null),\r\n      errors: get(error, 'response.data.errors', null)\r\n    };\r\n    return Promise.reject(errorResponse);\r\n  }\r\n);\r\n\r\nexport default axiosInstance;\r\n","import { AxiosHeaders, Method, RawAxiosRequestHeaders } from \"axios\";\r\nimport axiosInstance from \"./axiosInstance\";\r\n\r\ntype MethodsHeaders = Partial<{\r\n    [Key in Method as Lowercase<Key>]: AxiosHeaders;\r\n} & { common: AxiosHeaders }>;\r\n\r\nexport const getRequest = (data: {\r\n    url: string, params?: any, headers?: (RawAxiosRequestHeaders & MethodsHeaders\r\n    ) | AxiosHeaders\r\n}) => {\r\n    const { url, params, headers } = data\r\n    return axiosInstance.get(url, {\r\n        params,\r\n        headers\r\n    })\r\n}\r\n\r\n\r\nexport const postRequest = (data: {\r\n    url: string, payload?: any, params?: any, headers?: (RawAxiosRequestHeaders & MethodsHeaders\r\n    ) | AxiosHeaders\r\n}) => {\r\n    const { url, params, headers, payload } = data\r\n    return axiosInstance.post(url, payload, {\r\n        params,\r\n        headers\r\n    })\r\n}\r\n\r\n\r\nexport const putRequest = (data: {\r\n    url: string, payload?: any, params?: any, headers?: (RawAxiosRequestHeaders & MethodsHeaders\r\n    ) | AxiosHeaders\r\n}) => {\r\n    const { url, params, headers, payload } = data\r\n    return axiosInstance.put(url, payload, {\r\n        params,\r\n        headers\r\n    })\r\n}\r\n\r\nexport const patchRequest = (data: {\r\n    url: string, payload?: any, params?: any, headers?: (RawAxiosRequestHeaders & MethodsHeaders\r\n    ) | AxiosHeaders\r\n}) => {\r\n    const { url, params, headers, payload } = data\r\n    return axiosInstance.patch(url, payload, {\r\n        params,\r\n        headers\r\n    })\r\n}\r\n\r\nexport const deleteRequest = (data: {\r\n    url: string, params?: any, headers?: (RawAxiosRequestHeaders & MethodsHeaders\r\n    ) | AxiosHeaders\r\n}) => {\r\n    const { url, params, headers } = data\r\n    return axiosInstance.delete(url, {\r\n        params,\r\n        headers\r\n    })\r\n}","import { CloseOutlined } from '@ant-design/icons';\r\nimport { Button, Col, DatePicker, Form, Input, Row, Select, Tag } from 'antd';\r\nimport { getDepartments, getExperiences, getLocations, getWorkingTime } from 'apis/modules/Common';\r\nimport dayjs from 'dayjs';\r\nimport customParseFormat from 'dayjs/plugin/customParseFormat';\r\nimport { IJobForm } from 'models/jobs';\r\nimport { useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\ndayjs.extend(customParseFormat);\r\n\r\ninterface IProps {\r\n  textButton?: string;\r\n  onSubmit(job: IJobForm, skills: string[], type?: string): void;\r\n  item?: IJobForm;\r\n  isProcess?: boolean;\r\n}\r\n\r\nfunction JobForm(props: IProps) {\r\n  const { t } = useTranslation();\r\n  const navi = useNavigate();\r\n  const [form] = Form.useForm();\r\n  const dateFormat = 'YYYY-MM-DD';\r\n  const { item, onSubmit, textButton, isProcess } = props;\r\n  const [skillsForm, setSkillsForm] = useState<string[]>([]);\r\n  const [options, setOptions] = useState({\r\n    department: [],\r\n    workingTime: [],\r\n    yearOfExperience: [],\r\n    location: []\r\n  });\r\n\r\n  function formatOptions(options: any) {\r\n    return options.map((el: any) => ({ label: el, value: el }));\r\n  }\r\n\r\n  async function getYearOfExperienceOptions() {\r\n    try {\r\n      const response = await getExperiences();\r\n      if (response && response.data) {\r\n        const options = formatOptions(response.data);\r\n        setOptions((prev) => ({ ...prev, yearOfExperience: options }));\r\n      }\r\n    } catch (error) {\r\n      setOptions((prev) => ({ ...prev, yearOfExperience: [] }));\r\n    }\r\n  }\r\n\r\n  async function getDepartmentOptions() {\r\n    try {\r\n      const response = await getDepartments();\r\n      if (response && response.data) {\r\n        const options = formatOptions(response.data);\r\n        setOptions((prev) => ({ ...prev, department: options }));\r\n      }\r\n    } catch (error) {\r\n      setOptions((prev) => ({ ...prev, department: [] }));\r\n    }\r\n  }\r\n\r\n  async function getWorkingTimeOptions() {\r\n    try {\r\n      const response = await getWorkingTime();\r\n      if (response && response.data) {\r\n        const options = formatOptions(response.data);\r\n        setOptions((prev) => ({ ...prev, workingTime: options }));\r\n      }\r\n    } catch (error) {\r\n      setOptions((prev) => ({ ...prev, workingTime: [] }));\r\n    }\r\n  }\r\n\r\n  async function getLocationOptions() {\r\n    try {\r\n      const response = await getLocations();\r\n      if (response && response.data) {\r\n        const options = formatOptions(response.data);\r\n        setOptions((prev) => ({ ...prev, location: options }));\r\n      }\r\n    } catch (error) {\r\n      setOptions((prev) => ({ ...prev, location: [] }));\r\n    }\r\n  }\r\n\r\n  function onSkillsChange(e: any) {\r\n    if (e.key === 'Enter') {\r\n      e.preventDefault();\r\n      if (!e.target.value || !e.target.value.trim() || skillsForm.includes(e.target.value)) {\r\n        return;\r\n      }\r\n\r\n      setSkillsForm((prev) => [...prev, e.target.value.trim()]);\r\n      form.setFieldsValue({\r\n        skills: ''\r\n      });\r\n    }\r\n  }\r\n\r\n  function onRemoveSkill(skill: string) {\r\n    const newTags = skillsForm.filter((tag) => tag !== skill);\r\n    setSkillsForm(newTags);\r\n  }\r\n\r\n  async function getCommonOptions() {\r\n    await getDepartmentOptions();\r\n    await getLocationOptions();\r\n    await getWorkingTimeOptions();\r\n    await getYearOfExperienceOptions();\r\n  }\r\n\r\n  function handleSubmitForm(type?: string) {\r\n    onSubmit(form.getFieldsValue(), skillsForm, type);\r\n    form.submit();\r\n  }\r\n\r\n  useEffect(() => {\r\n    getCommonOptions();\r\n\r\n    return () => {\r\n      setOptions({\r\n        department: [],\r\n        workingTime: [],\r\n        yearOfExperience: [],\r\n        location: []\r\n      });\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (item) {\r\n      // set start date into date picker antd\r\n      const startDate = dayjs(item?.startDate, dateFormat);\r\n      const endDate = dayjs(item?.endDate, dateFormat);\r\n      const skills = item.skills?.map((el: any) => el.skillName);\r\n      const itemForm = { ...item, startDate, endDate, skills: '' };\r\n      setSkillsForm(skills as string[]);\r\n      form.setFieldsValue(itemForm);\r\n    }\r\n\r\n    return () => {\r\n      form.resetFields();\r\n    };\r\n  }, [item]);\r\n\r\n  return (\r\n    <Form layout=\"vertical\" form={form}>\r\n      <h3 className=\"mb-4 font-medium\">Information</h3>\r\n      <Row gutter={10}>\r\n        <Col\r\n          xl={{\r\n            span: 6\r\n          }}\r\n          md={{\r\n            span: 12\r\n          }}\r\n        >\r\n          <Form.Item name=\"department\" label={t('common.label.department')} rules={[{ required: true }]}>\r\n            <Select style={{ width: '100%' }} placeholder={t('common.label.type')} options={options.department} />\r\n          </Form.Item>\r\n        </Col>\r\n        <Col\r\n          xl={{\r\n            span: 6\r\n          }}\r\n          md={{\r\n            span: 12\r\n          }}\r\n        >\r\n          <Form.Item name=\"jobName\" label={t('common.label.jobName')} rules={[{ required: true }]} className=\"my-0\">\r\n            <Input placeholder={t('common.label.jobName')} />\r\n          </Form.Item>\r\n        </Col>\r\n        <Col\r\n          xl={{\r\n            span: 6\r\n          }}\r\n          md={{\r\n            span: 12\r\n          }}\r\n        >\r\n          <Form.Item name=\"workingTime\" label={t('form.jobs.label.workingTime')} rules={[{ required: true }]}>\r\n            <Select placeholder={t('common.label.type')} options={options.workingTime}></Select>\r\n          </Form.Item>\r\n        </Col>\r\n        <Col\r\n          xl={{\r\n            span: 6\r\n          }}\r\n          md={{\r\n            span: 12\r\n          }}\r\n        >\r\n          <Form.Item name=\"city\" label={t('form.jobs.label.cityName')}>\r\n            <Select placeholder={t('form.jobs.label.cityName')} options={options.location}></Select>\r\n          </Form.Item>\r\n        </Col>\r\n        <Col\r\n          xl={{\r\n            span: 6\r\n          }}\r\n          md={{\r\n            span: 12\r\n          }}\r\n        ></Col>\r\n      </Row>\r\n      <Row gutter={10}>\r\n        <Col\r\n          xl={{\r\n            span: 6\r\n          }}\r\n          md={{\r\n            span: 12\r\n          }}\r\n        >\r\n          <Form.Item name=\"experience\" label={t('form.jobs.label.experience')} rules={[{ required: true }]}>\r\n            <Select placeholder={t('common.label.type')} options={options.yearOfExperience}></Select>\r\n          </Form.Item>\r\n        </Col>\r\n        <Col\r\n          xl={{\r\n            span: 6\r\n          }}\r\n          md={{\r\n            span: 12\r\n          }}\r\n        >\r\n          <Form.Item name=\"startDate\" label={t('form.jobs.label.startDate')} rules={[{ required: true }]}>\r\n            <DatePicker\r\n              placeholder={t('form.jobs.label.startDate_placeholder')}\r\n              format={dateFormat}\r\n              maxDate={dayjs(form.getFieldValue('endDate'))}\r\n            />\r\n          </Form.Item>\r\n        </Col>\r\n        <Col\r\n          xl={{\r\n            span: 6\r\n          }}\r\n          md={{\r\n            span: 12\r\n          }}\r\n        >\r\n          <Form.Item name=\"endDate\" label={t('form.jobs.label.endDate')} rules={[{ required: true }]}>\r\n            <DatePicker\r\n              placeholder={t('form.jobs.label.endDate_placeholder')}\r\n              format={dateFormat}\r\n              minDate={dayjs(form.getFieldValue('startDate'))}\r\n            />\r\n          </Form.Item>\r\n        </Col>\r\n        <Col\r\n          xl={{\r\n            span: 6\r\n          }}\r\n          md={{\r\n            span: 12\r\n          }}\r\n        >\r\n          <Form.Item\r\n            name=\"budget\"\r\n            label={t('form.jobs.label.budget')}\r\n            rules={[\r\n              {\r\n                required: true\r\n              }\r\n            ]}\r\n          >\r\n            <Input placeholder={t('form.jobs.label.budget')} />\r\n          </Form.Item>\r\n        </Col>\r\n      </Row>\r\n      <Row gutter={10}>\r\n        <Col\r\n          xl={{\r\n            span: 12\r\n          }}\r\n          md={{\r\n            span: 24\r\n          }}\r\n        >\r\n          <Form.Item\r\n            name=\"skills\"\r\n            label={t('common.label.skills')}\r\n            rules={[{ required: skillsForm.length === 0 }]}\r\n            className=\"my-0\"\r\n          >\r\n            <Input placeholder={t('common.label.skills')} onKeyDown={onSkillsChange} />\r\n          </Form.Item>\r\n          <div className=\"skills my-3\">\r\n            {skillsForm &&\r\n              skillsForm?.map((el: any, id) => {\r\n                return (\r\n                  <Tag key={id} className=\"custom-tag my-1\">\r\n                    <span>\r\n                      {el}\r\n                      <span\r\n                        className=\"close-icon ml-2\"\r\n                        onClick={() => {\r\n                          onRemoveSkill(el);\r\n                        }}\r\n                      >\r\n                        <CloseOutlined width={8} height={8} className=\"cursor-pointer\" />\r\n                      </span>\r\n                    </span>\r\n                  </Tag>\r\n                );\r\n              })}\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n      <Form.Item name=\"description\" label={t('form.jobs.label.description')} rules={[{ required: true }]}>\r\n        <Input.TextArea placeholder={t('form.jobs.label.description')} showCount rows={4} maxLength={100} />\r\n      </Form.Item>\r\n      <Form.Item name=\"requirement\" label={t('form.jobs.label.requirement')} rules={[{ required: true }]}>\r\n        <Input.TextArea placeholder={t('form.jobs.label.requirement')} showCount rows={4} maxLength={100} />\r\n      </Form.Item>\r\n      <Form.Item name=\"preferredQualifications\" label={t('form.jobs.label.preferredQualifications')}>\r\n        <Input.TextArea placeholder={t('form.jobs.label.preferredQualifications')} showCount rows={4} maxLength={100} />\r\n      </Form.Item>\r\n      <Form.Item>\r\n        <div className=\"w-full flex justify-end items-center gap-2 mt-6\">\r\n          <Button onClick={() => navi(-1)} className=\"h-10 w-52\">\r\n            {t('common.label.cancel')}\r\n          </Button>\r\n\r\n          {item && (\r\n            <button\r\n              className=\"bg-blue-500 hover:bg-blue-600 text-white h-10 w-52\"\r\n              onClick={() => handleSubmitForm('duplicate')}\r\n              disabled={isProcess}\r\n            >\r\n              {t('common.label.duplicate')}\r\n            </button>\r\n          )}\r\n          <Button className=\"h-10 w-52\" type=\"primary\" danger onClick={() => handleSubmitForm()} disabled={isProcess}>\r\n            {textButton || t('common.label.create')}\r\n          </Button>\r\n        </div>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n}\r\n\r\nexport default JobForm;\r\n","export const CookieKeys = {\r\n  Token: 'Token',\r\n  RefreshToken: 'RefreshToken'\r\n};\r\n\r\nexport const BASE_API_URL = process.env.REACT_APP_BASE_URL;\r\n","import { notification } from 'antd';\r\nimport { IconType } from 'antd/es/notification/interface';\r\n\r\nfunction noti(type: IconType, message: string) {\r\n  return notification.open({\r\n    type,\r\n    message,\r\n    duration: 1\r\n  });\r\n}\r\n\r\nexport default noti;\r\n","import { createJob } from 'apis/modules/Jobs';\r\nimport JobForm from 'components/Form/JobForm';\r\nimport Routers from 'constants/routers';\r\nimport dayjs from 'dayjs';\r\nimport noti from 'libs/notification';\r\nimport { IJobForm } from 'models/jobs';\r\n\r\nimport React, { useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst CreatePage: React.FC = () => {\r\n  const [isProcess, setIsProcess] = useState(false);\r\n  const { t } = useTranslation();\r\n\r\n  const navi = useNavigate();\r\n  const onSubmit = async (values: IJobForm, skills: string[]) => {\r\n    try {\r\n      setIsProcess(true);\r\n      const payload = {\r\n        jobName: values.jobName,\r\n        workingTime: values.workingTime,\r\n        city: values.city,\r\n        experience: values.experience,\r\n        startDate: dayjs(values.startDate).format('YYYY-MM-DD'),\r\n        endDate: dayjs(values.endDate).format('YYYY-MM-DD'),\r\n        budget: values.budget && isNaN(values.budget) ? 0 : Number(values.budget),\r\n        requirement: values.requirement,\r\n        description: values.description,\r\n        department: values.department,\r\n        skills\r\n      };\r\n      const response = (await createJob(payload)) as any;\r\n      if (response && response.code === 'SUCCESS') {\r\n        noti('success', 'Create successfully');\r\n        navi(Routers.Jobs);\r\n      } else {\r\n        noti('error', response.message);\r\n      }\r\n    } catch (error: any) {\r\n      noti('error', error.message);\r\n    } finally {\r\n      setIsProcess(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"h-full\">\r\n      <div className=\"h-16 bg-white w-full\">\r\n        <div className=\"flex h-full flex-row justify-between items-center px-6\">\r\n          <div className=\"text-xl font-bold\">{t('page.jobs.titleCreate')}</div>\r\n        </div>\r\n      </div>\r\n      <div className=\"mt-4 mb-12 mx-7 rounded-2xl p-4 bg-white\">\r\n        <JobForm isProcess={isProcess} onSubmit={onSubmit} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreatePage;\r\n"],"names":["getDepartments","getRequest","url","getLocations","getExperiences","getCandidateStatus","getWorkingTime","createJob","newItem","postRequest","payload","getListJob","params","updateJob","id","updatedItem","putRequest","concat","deleteJob","deleteRequest","getJobById","updateStatusJob","status","patchRequest","axiosInstance","axios","create","headers","Accept","baseURL","BASE_API_URL","timeout","validateStatus","interceptors","request","use","token","getCookie","CookieKeys","Token","set","_error","console","log","Promise","reject","message","errors","response","data","error","_error$response","errorResponse","get","post","put","patch","delete","dayjs","customParseFormat","props","t","useTranslation","navi","useNavigate","form","Form","useForm","dateFormat","item","onSubmit","textButton","isProcess","skillsForm","setSkillsForm","useState","options","setOptions","department","workingTime","yearOfExperience","location","formatOptions","map","el","label","value","async","getCommonOptions","prev","getDepartmentOptions","getLocationOptions","getWorkingTimeOptions","getYearOfExperienceOptions","handleSubmitForm","type","getFieldsValue","submit","useEffect","_item$skills","startDate","endDate","skills","skillName","itemForm","setFieldsValue","resetFields","_jsxs","layout","children","_jsx","className","Row","gutter","Col","xl","span","md","Item","name","rules","required","Select","style","width","placeholder","Input","DatePicker","format","maxDate","getFieldValue","minDate","length","onKeyDown","e","key","preventDefault","target","trim","includes","Tag","onClick","skill","newTags","filter","tag","onRemoveSkill","CloseOutlined","height","TextArea","showCount","rows","maxLength","Button","disabled","danger","RefreshToken","process","notification","open","duration","CreatePage","setIsProcess","JobForm","values","jobName","city","experience","budget","isNaN","Number","requirement","description","code","noti","Routers","Jobs"],"sourceRoot":""}